[{"/home/blacktype/Documents/westerdals/web/exam-frontend/src/index.js":"1","/home/blacktype/Documents/westerdals/web/exam-frontend/src/Router.js":"2","/home/blacktype/Documents/westerdals/web/exam-frontend/src/reportWebVitals.js":"3","/home/blacktype/Documents/westerdals/web/exam-frontend/src/pages/NotFoundPage.js":"4","/home/blacktype/Documents/westerdals/web/exam-frontend/src/pages/HomePage.js":"5","/home/blacktype/Documents/westerdals/web/exam-frontend/src/components/header/Header.js":"6","/home/blacktype/Documents/westerdals/web/exam-frontend/src/pages/GamesPage.js":"7","/home/blacktype/Documents/westerdals/web/exam-frontend/src/contexts/GameContext.js":"8","/home/blacktype/Documents/westerdals/web/exam-frontend/src/components/games/GameImage.js":"9","/home/blacktype/Documents/westerdals/web/exam-frontend/src/pages/GameInfoPage.js":"10","/home/blacktype/Documents/westerdals/web/exam-frontend/src/components/games/gameslist/GamesList.js":"11","/home/blacktype/Documents/westerdals/web/exam-frontend/src/components/games/gameslist/GamesItem.js":"12","/home/blacktype/Documents/westerdals/web/exam-frontend/src/components/games/gameform/GameImageUpload.js":"13","/home/blacktype/Documents/westerdals/web/exam-frontend/src/components/games/gameform/GameCreateForm.js":"14","/home/blacktype/Documents/westerdals/web/exam-frontend/src/components/games/gameform/GamesUpdateForm.js":"15","/home/blacktype/Documents/westerdals/web/exam-frontend/src/pages/CharacterInfoPage.js":"16","/home/blacktype/Documents/westerdals/web/exam-frontend/src/components/character/CharacterItem.js":"17","/home/blacktype/Documents/westerdals/web/exam-frontend/src/components/character/CharacterList.js":"18","/home/blacktype/Documents/westerdals/web/exam-frontend/src/components/character/characterForm/CharacterCreateForm.js":"19","/home/blacktype/Documents/westerdals/web/exam-frontend/src/components/character/characterForm/CharacterImageUpload.js":"20","/home/blacktype/Documents/westerdals/web/exam-frontend/src/components/character/characterForm/CharacterUpdateForm.js":"21","/home/blacktype/Documents/westerdals/web/exam-frontend/src/pages/CharactersPage.js":"22"},{"size":565,"mtime":1607024643375,"results":"23","hashOfConfig":"24"},{"size":1789,"mtime":1607037780292,"results":"25","hashOfConfig":"24"},{"size":402,"mtime":1607024643299,"results":"26","hashOfConfig":"24"},{"size":143,"mtime":1606858355179,"results":"27","hashOfConfig":"24"},{"size":2422,"mtime":1607045309844,"results":"28","hashOfConfig":"24"},{"size":1968,"mtime":1607037808288,"results":"29","hashOfConfig":"24"},{"size":2128,"mtime":1607044794920,"results":"30","hashOfConfig":"24"},{"size":759,"mtime":1607044140330,"results":"31","hashOfConfig":"24"},{"size":376,"mtime":1607024643379,"results":"32","hashOfConfig":"24"},{"size":5970,"mtime":1607042033840,"results":"33","hashOfConfig":"24"},{"size":734,"mtime":1607041938800,"results":"34","hashOfConfig":"24"},{"size":2990,"mtime":1607036604259,"results":"35","hashOfConfig":"24"},{"size":1308,"mtime":1607024643283,"results":"36","hashOfConfig":"24"},{"size":2593,"mtime":1607024643427,"results":"37","hashOfConfig":"24"},{"size":2860,"mtime":1607024643323,"results":"38","hashOfConfig":"24"},{"size":4905,"mtime":1607037531937,"results":"39","hashOfConfig":"24"},{"size":2622,"mtime":1607037410260,"results":"40","hashOfConfig":"24"},{"size":561,"mtime":1607036196555,"results":"41","hashOfConfig":"24"},{"size":1587,"mtime":1607032167634,"results":"42","hashOfConfig":"24"},{"size":1279,"mtime":1607036816793,"results":"43","hashOfConfig":"24"},{"size":1947,"mtime":1607038025370,"results":"44","hashOfConfig":"24"},{"size":1963,"mtime":1607044812276,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"12ej32s",{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"48"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"48"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"48"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"48"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"48"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"48"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"48"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"48"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"48"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"48"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"48"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"48"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"48"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/blacktype/Documents/westerdals/web/exam-frontend/src/index.js",[],["104","105"],"/home/blacktype/Documents/westerdals/web/exam-frontend/src/Router.js",[],"/home/blacktype/Documents/westerdals/web/exam-frontend/src/reportWebVitals.js",[],"/home/blacktype/Documents/westerdals/web/exam-frontend/src/pages/NotFoundPage.js",[],"/home/blacktype/Documents/westerdals/web/exam-frontend/src/pages/HomePage.js",[],"/home/blacktype/Documents/westerdals/web/exam-frontend/src/components/header/Header.js",[],"/home/blacktype/Documents/westerdals/web/exam-frontend/src/pages/GamesPage.js",["106"],"/home/blacktype/Documents/westerdals/web/exam-frontend/src/contexts/GameContext.js",[],"/home/blacktype/Documents/westerdals/web/exam-frontend/src/components/games/GameImage.js",["107","108","109"],"import React from 'react';\nimport {Col, Row} from 'reactstrap';\n\nconst GameImage = (prop) => {\n    if (prop.image !== null) {\n        console.log()\n        return (\n            <Col>\n                <Row md={12}>\n                    <img src={prop.image}/>\n                </Row>\n            </Col>\n        )\n    } else {\n        return null\n    }\n}\n\nexport default GameImage;","/home/blacktype/Documents/westerdals/web/exam-frontend/src/pages/GameInfoPage.js",["110","111","112","113"],"import React, {useContext, useEffect, useState} from 'react'\nimport {Button, Card, CardGroup, CardImg, Col, Container, Row} from 'reactstrap';\nimport {GameContext} from \"../contexts/GameContext\";\nimport GameImage from \"../components/games/GameImage\";\nimport GameImageUpload from \"../components/games/gameform/GameImageUpload\";\nimport CharacterList from \"../components/character/CharacterList\";\nimport CharacterCreateForm from \"../components/character/characterForm/CharacterCreateForm\";\nimport {useParams} from 'react-router-dom'\nimport axios from \"axios\";\n\nconst GameInfoPage = (props) => {\n    const [games, setGames, getGames] = useContext(GameContext);\n    const [game, setGame] = useState(null);\n    const [addImageToggle, setAddImageToggle] = useState(false);\n    const [addCharacterToggle, setAddCharacterToggle] = useState(false);\n    const [characters, setCharacters] = useState([])\n    const {id} = useParams();\n\n    useEffect(() => {\n        if (id) {\n            getGame()\n        }\n    }, [])\n\n    const getGame = () => {\n        axios.get(\"https://localhost:5001/Game/\" + id)\n            .then(res => {\n                setGame(res.data)\n                if(res.data && res.data.characterIds){\n                    res.data.characterIds.map(  c =>  getCharacter(c))\n                }\n            })\n            .catch(e => {\n                setGame(null)\n            })\n    }\n\n    const getCharacter = (characterId) => {\n        axios.get(\"https://localhost:5001/Character/\" + characterId)\n            .then(res => {\n                characters.push(res.data)\n                setCharacters([...characters])\n            })\n            .catch(e => {\n                console.log(\"Could not get character\")\n            })\n    }\n\n\n    const adminTools = () => {\n        return (\n            <Row className=\"float-right\">\n                <Col md={12}>\n                    <Button onClick={() => {\n                        setAddImageToggle(!addImageToggle)\n                        getGame()\n                    }} className=\"mb-2 ml-1 mr-1\"\n                            id=\"addGameImageBtn\" color=\"primary\">{addImageToggle ? \"X\" : \"Add image\"}</Button>\n                    <Button onClick={() => {\n                        setAddCharacterToggle(!addCharacterToggle)\n                        getGame()\n                    }} className=\"mb-2 ml-1 mr-1\"\n                            id=\"addGameImageBtn\" color=\"primary\">{addCharacterToggle ? \"X\" : \"Add character\"}</Button>\n                </Col>\n            </Row>\n        )\n    }\n\n    if (game === null) {\n        return <p>No game with id: {id} found</p>\n    }\n    return (\n        <Container fluid={true}>\n            {addImageToggle ? <GameImageUpload toggle={setAddImageToggle} gameId={game.gameId}/> : null}\n            {addCharacterToggle ? <CharacterCreateForm toggle={setAddCharacterToggle} gameId={game.gameId}/> : null}\n            <Row>\n                <Col md={12}>\n                    <Card body className=\"m-5\">\n                        <Row className=\"m-2\">\n                            <Col md={12}>\n                                {game.name} {props.loggedIn.loggedIn && props.loggedIn.role === \"ADMIN\" ? adminTools() : null}\n                            </Col>\n                        </Row>\n                        <Row className=\"m-2\">\n                            <Col md={6}>\n                                {game.images.length > 0 ? (\n                                        <CardImg top src={\"https://localhost:5001/\" + game.images[0]}/>) :\n                                    <h1 className=\"text-muted\">No image</h1>}\n                            </Col>\n                            <Col md={6}>\n                                <Row className=\"mt-2 mb-2\">\n                                    <Col md={12}>\n                                        <p className=\"text-muted m-0 font-italic\">Id: {game.gameId}</p>\n                                    </Col>\n                                </Row>\n                                <Row className=\"mt-2 mb-2\">\n                                    <Col md={12}>\n                                        <p className=\"text-muted m-0\">Description: {game.description}</p>\n                                    </Col>\n                                </Row>\n                                <Row className=\"mt-2 mb-2\">\n                                    <Col md={12}>\n                                        <p className=\"text-muted m-0\">Category: {game.category}</p>\n                                    </Col>\n                                </Row>\n                                <Row className=\"mt-2 mb-2\">\n                                    <Col md={12}>\n                                        <p className=\"text-muted m-0\">Price: {game.price}</p>\n                                    </Col>\n                                </Row>\n                            </Col>\n                        </Row>\n                        <Row className=\"m-2\">\n                            <Col md={12}>\n                                <p className=\"text-muted m-0\">Game images: </p>\n                                <CardGroup>\n                                    {game.images.map((image, i) => <GameImage key={i + \"wwo\"}\n                                                                              image={\"https://localhost:5001/\" + image}/>)}\n                                </CardGroup>\n                            </Col>\n                        </Row>\n                        <Row className=\"m-2\">\n                            <Col md={12}>\n                                <p className=\"text-muted m-0\">Characters: </p>\n                                {game.characterIds ? <CharacterList loggedIn={props.loggedIn} getCharacters={getGame} characters={characters}/> : <p>No characters</p>}\n                            </Col>\n                        </Row>\n                    </Card>\n                </Col>\n            </Row>\n        </Container>\n    )\n}\n\nexport default GameInfoPage","/home/blacktype/Documents/westerdals/web/exam-frontend/src/components/games/gameslist/GamesList.js",["114","115","116","117","118"],"import React, {useContext, useState} from 'react';\nimport GamesItem from './GamesItem'\nimport {Button, CardColumns, Col, Input, Row} from 'reactstrap';\nimport CharacterItem from \"../../character/CharacterItem\";\n\nconst GamesList = (props) => {\n\n    return (\n        <div>\n            <Row className=\"mt-2 mb-2\">\n                <Col md={12}>\n                    <CardColumns>\n                        {props.games && Array.isArray(props.games) ? props.games.map((g, i) => <GamesItem key={i + \"bd\"}  getGames={props.getGames} loggedIn={props.loggedIn} game={g}/>) :\n                            <p>No Games</p>}\n                    </CardColumns>\n                </Col>\n            </Row>\n        </div>\n    )\n}\n\nexport default GamesList;","/home/blacktype/Documents/westerdals/web/exam-frontend/src/components/games/gameslist/GamesItem.js",["119","120"],"import React, {useContext, useState} from 'react';\nimport GamesUpdateForm from \"../gameform/GamesUpdateForm\";\nimport {Button, Card, CardImg, Col, Row} from 'reactstrap';\nimport axios from \"axios\";\nimport {GameContext} from \"../../../contexts/GameContext\";\nimport {useHistory} from \"react-router-dom\";\n\nconst GameItem = (prop) => {\n    const [edit, setEdit] = useState(false)\n    const history = useHistory()\n\n    const deleteGame = () => {\n        axios.delete('https://localhost:5001/Game/' + prop.game.gameId).then(res => {\n            prop.getGames()\n        }).catch(e => {\n            console.log(\"could not add game\")\n        })\n    }\n\n    const adminTools = () => {\n        return (\n            <Row className=\"float-right\">\n                <Col md={12}>\n                    <Button onClick={() => deleteGame()} className=\"ml-1 mr-1\" id=\"userUpdateBtn\" color=\"primary\">Delete\n                        game</Button>\n                    <Button onClick={() => setEdit(!edit)} className=\"ml-1 mr-1\" id=\"userUpdateBtn\" color=\"primary\">Update\n                        game</Button>\n                </Col>\n            </Row>\n        )\n    }\n\n    const openGame = () => {\n        history.push(\"/game/\" + prop.game.gameId)\n    }\n\n    if (edit && prop.game) {\n        return <GamesUpdateForm game={prop.game} toggle={setEdit}/>\n    }\n\n    return (\n        <Card body>\n            <Row className=\"m-2\">\n                <Col md={12}>\n                    {prop.game.name} {prop.loggedIn.loggedIn && prop.loggedIn.role === \"ADMIN\" ? adminTools() : null}\n                </Col>\n            </Row>\n            <Row className=\"m-2\">\n                <Col md={6}>\n                    {prop.game.images.length > 0 ? (\n                            <CardImg top src={\"https://localhost:5001/\" + prop.game.images[0]}/>) :\n                        <h1 className=\"text-muted\">No image</h1>}\n                </Col>\n                <Col md={6}>\n                    <Row className=\"mt-2 mb-2\">\n                        <Col md={12}>\n                            <p className=\"text-muted m-0\">Description: {prop.game.description}</p>\n                        </Col>\n                    </Row>\n                    <Row className=\"mt-2 mb-2\">\n                        <Col md={12}>\n                            <p className=\"text-muted m-0\">Category: {prop.game.category}</p>\n                        </Col>\n                    </Row>\n                    <Row className=\"mt-2 mb-2\">\n                        <Col md={12}>\n                            <p className=\"text-muted m-0\">Price: {prop.game.price}</p>\n                        </Col>\n                    </Row>\n                </Col>\n            </Row>\n            <Row className=\"m-2\">\n                <Col md={12}>\n                    <Button onClick={() => openGame()} className=\"float-right m-1\" id=\"openGameBtn\"\n                            color=\"secondary\">Open</Button>\n                </Col>\n            </Row>\n        </Card>\n    )\n}\n\nexport default GameItem;","/home/blacktype/Documents/westerdals/web/exam-frontend/src/components/games/gameform/GameImageUpload.js",["121","122"],"import React, {useContext, useState} from 'react';\nimport {Button, CustomInput, FormGroup, Label} from 'reactstrap';\nimport axios from \"axios\";\nimport {GameContext} from \"../../../contexts/GameContext\";\n\nconst GameImageUpload = (prop) => {\n    const [games, setGames, getGames] = useContext(GameContext)\n    const [imageFile, setImageFile] = useState(null);\n\n    const uploadImage = () => {\n        if (imageFile !== null) {\n            const data = new FormData();\n            data.append(\"file\", imageFile)\n            data.append(\"gameId\", prop.gameId)\n            axios.post('https://localhost:5001/Game/UploadImage', data, {headers: {\"Content-Type\": \"multipart/form-data\"}}).then(res => {\n                getGames()\n                prop.toggle(false)\n            }).catch(e => {\n                console.log(\"could not add image\")\n            })\n        }\n    }\n\n    return (\n        <FormGroup>\n            <Label for=\"exampleCustomFileBrowser\">Add image</Label>\n            <CustomInput onChange={(e) => setImageFile(e.target.files[0])} type=\"file\" id=\"exampleCustomFileBrowser\"\n                         name=\"customFile\" label=\"Select an image\"/>\n            <Button onClick={uploadImage} id=\"userUpdateBtn\" color=\"primary\">Create</Button>\n        </FormGroup>\n    )\n}\n\nexport default GameImageUpload;","/home/blacktype/Documents/westerdals/web/exam-frontend/src/components/games/gameform/GameCreateForm.js",["123","124"],"import React, {useContext, useState} from 'react';\nimport {GameContext} from \"../../../contexts/GameContext\";\nimport axios from 'axios'\nimport {Button, Card, CardBody, CardTitle, Input, InputGroup} from 'reactstrap';\n\nconst GameCreateForm = (prop) => {\n    const [games, setGames, getGames] = useContext(GameContext)\n    const [name, setName] = useState(\"\")\n    const [description, setDescription] = useState(\"\")\n    const [category, setCategory] = useState(\"\")\n    const [price, setPrice] = useState(\"\")\n\n    const addGame = () => {\n        const _price = Number.parseFloat(price)\n        axios.post('https://localhost:5001/Game', {\n            name, description, category, price: _price\n        }).then(res => {\n            setName(\"\")\n            setDescription(\"\")\n            setCategory(\"\")\n            setPrice(\"\")\n            getGames()\n            prop.toggle(false)\n        }).catch(e => {\n            console.log(\"could not add game\")\n        })\n    }\n\n\n    return (\n        <Card className=\"mt-2 mb-2 ml-3 mr-3\">\n            <CardBody>\n                <CardTitle>Create a new game</CardTitle>\n                <InputGroup>\n                    <Input type=\"text\"\n                           id=\"nameInput\"\n                           onChange={(e) => setName(e.target.value)}\n                           value={name}\n                           placeholder=\"name\"/>\n                </InputGroup>\n\n                <InputGroup>\n                    <Input type=\"text\"\n                           id=\"descriptionInput\"\n                           onChange={(e) => setDescription(e.target.value)}\n                           value={description}\n                           placeholder=\"description\"/>\n                </InputGroup>\n\n                <InputGroup>\n                    <Input type=\"text\"\n                           id=\"categoryInput\"\n                           onChange={(e) => setCategory(e.target.value)}\n                           value={category}\n                           placeholder=\"category\"/>\n                </InputGroup>\n\n                <InputGroup>\n                    <Input type=\"number\"\n                           tep=\"0.01\"\n                           min={0}\n                           id=\"priceInput\"\n                           onChange={(e) => setPrice(e.target.value)}\n                           value={price}\n                           placeholder=\"price\"/>\n                </InputGroup>\n\n\n                <Button onClick={addGame} id=\"userUpdateBtn\" color=\"primary\">Create</Button>\n            </CardBody>\n        </Card>\n    )\n}\n\nexport default GameCreateForm;","/home/blacktype/Documents/westerdals/web/exam-frontend/src/components/games/gameform/GamesUpdateForm.js",["125","126"],"import React, {useContext, useState} from 'react';\nimport {GameContext} from \"../../../contexts/GameContext\";\nimport axios from 'axios'\nimport {Button, Card, CardBody, CardTitle, Input, InputGroup} from 'reactstrap';\n\nconst GameUpdateForm = (prop) => {\n    const [games, setGames, getGames] = useContext(GameContext)\n    const [name, setName] = useState(prop.game.name)\n    const [description, setDescription] = useState(prop.game.description)\n    const [category, setCategory] = useState(prop.game.category)\n    const [price, setPrice] = useState(prop.game.price)\n\n    const updateGame = () => {\n        const _price = Number.parseFloat(price)\n        axios.put('https://localhost:5001/Game/' + prop.game.gameId, {\n            gameId: prop.game.gameId,\n            name: name,\n            description: description,\n            category: category,\n            price: _price,\n            images: prop.game.images,\n            characterIds: prop.game.characterIds\n        }).then(res => {\n            getGames()\n            prop.toggle(false)\n        }).catch(e => {\n            console.log(\"could not update game\")\n        })\n    }\n\n\n    return (\n        <Card className=\"mt-2 mb-2 ml-3 mr-3\">\n            <CardBody>\n                <CardTitle>Update</CardTitle>\n                <InputGroup>\n                    <Input type=\"text\"\n                           id=\"nameInput\"\n                           onChange={(e) => setName(e.target.value)}\n                           value={name}\n                           placeholder=\"name\"/>\n                </InputGroup>\n\n                <InputGroup>\n                    <Input type=\"text\"\n                           id=\"descriptionInput\"\n                           onChange={(e) => setDescription(e.target.value)}\n                           value={description}\n                           placeholder=\"description\"/>\n                </InputGroup>\n\n                <InputGroup>\n                    <Input type=\"text\"\n                           id=\"categoryInput\"\n                           onChange={(e) => setCategory(e.target.value)}\n                           value={category}\n                           placeholder=\"category\"/>\n                </InputGroup>\n\n                <InputGroup>\n                    <Input type=\"number\"\n                           tep=\"0.01\"\n                           min={0}\n                           id=\"priceInput\"\n                           onChange={(e) => setPrice(e.target.value)}\n                           value={price}\n                           placeholder=\"price\"/>\n                </InputGroup>\n\n                <Button onClick={() => prop.toggle(false)} id=\"userUpdateBtn\" color=\"primary\">Back</Button>\n                <Button onClick={updateGame} id=\"userUpdateBtn\" color=\"primary\">Update</Button>\n            </CardBody>\n        </Card>\n    )\n}\n\nexport default GameUpdateForm;","/home/blacktype/Documents/westerdals/web/exam-frontend/src/pages/CharacterInfoPage.js",["127","128","129","130"],"import React, {useContext, useEffect, useState} from 'react'\nimport {Button, Card, CardGroup, CardImg, Col, Container, Row} from 'reactstrap';\nimport {GameContext} from \"../contexts/GameContext\";\nimport GameImage from \"../components/games/GameImage\";\nimport GamesList from \"../components/games/gameslist/GamesList\";\nimport CharacterCreateForm from \"../components/character/characterForm/CharacterCreateForm\";\nimport {useParams} from 'react-router-dom'\nimport axios from \"axios\";\nimport CharacterImageUpload from \"../components/character/characterForm/CharacterImageUpload\";\n\nconst CharacterInfoPage = (props) => {\n    const [character, setCharacter] = useState(null);\n    const [addImageToggle, setAddImageToggle] = useState(false);\n    const [games, setGames] = useState([])\n    const {id} = useParams();\n\n    useEffect(() => {\n        if (id) {\n            getCharacter()\n        }\n    }, [])\n\n    const getCharacter = () => {\n        axios.get(\"https://localhost:5001/Character/\" + id)\n            .then(res => {\n                setCharacter(res.data)\n                if(res.data && res.data.gameIds){\n                    res.data.gameIds.map(  g =>  getGame(g))\n                }\n            })\n            .catch(e => {\n                setCharacter(null)\n            })\n    }\n\n    const getGame = (gameId) => {\n        axios.get(\"https://localhost:5001/Game/\" + gameId)\n            .then(res => {\n                games.push(res.data)\n                setGames([...games])\n            })\n            .catch(e => {\n                console.log(\"Could not get character\")\n            })\n    }\n\n\n\n    const adminTools = () => {\n        return (\n            <Row className=\"float-right\">\n                <Col md={12}>\n                    <Button onClick={() => {\n                        setAddImageToggle(!addImageToggle)\n                        getCharacter()\n                    }} className=\"mb-2 ml-1 mr-1\"\n                            id=\"addGameImageBtn\" color=\"primary\">{addImageToggle ? \"X\" : \"Add image\"}</Button>\n                </Col>\n            </Row>\n        )\n    }\n\n    if (character === null) {\n        return <p>No character with id: {id} found</p>\n    }\n    return (\n        <Container fluid={true}>\n            {addImageToggle ? <CharacterImageUpload toggle={setAddImageToggle} getCharacters={getCharacter} characterId={character.characterId}/> : null}\n            <Row>\n                <Col md={12}>\n                    <Card body className=\"m-5\">\n                        <Row className=\"m-2\">\n                            <Col md={12}>\n                                {character.name} {props.loggedIn.loggedIn && props.loggedIn.role === \"ADMIN\" ? adminTools() : null}\n                            </Col>\n                        </Row>\n                        <Row className=\"m-2\">\n                            <Col md={6}>\n                                {character.images.length > 0 ? (\n                                        <CardImg top src={\"https://localhost:5001/\" + character.images[0]}/>) :\n                                    <h1 className=\"text-muted\">No image</h1>}\n                            </Col>\n                            <Col md={6}>\n                                <Row className=\"mt-2 mb-2\">\n                                    <Col md={12}>\n                                        <p className=\"text-muted m-0 font-italic\">Id: {character.characterId}</p>\n                                    </Col>\n                                </Row>\n                                <Row className=\"mt-2 mb-2\">\n                                    <Col md={12}>\n                                        <p className=\"text-muted m-0\">Description: {character.description}</p>\n                                    </Col>\n                                </Row>\n                            </Col>\n                        </Row>\n                        <Row className=\"m-2\">\n                            <Col md={12}>\n                                <p className=\"text-muted m-0\">Character images: </p>\n                                <CardGroup>\n                                    {character.images.map((image, i) => <GameImage key={i + \"wwo\"}\n                                                                              image={\"https://localhost:5001/\" + image}/>)}\n                                </CardGroup>\n                            </Col>\n                        </Row>\n                        <Row className=\"m-2\">\n                            <Col md={12}>\n                                <p className=\"text-muted m-0\">Games: </p>\n                                {character.gameIds ? <GamesList loggedIn={props.loggedIn} getGames={getCharacter} games={games}/> : <p>No games</p>}\n                            </Col>\n                        </Row>\n                    </Card>\n                </Col>\n            </Row>\n        </Container>\n    )\n}\n\nexport default CharacterInfoPage","/home/blacktype/Documents/westerdals/web/exam-frontend/src/components/character/CharacterItem.js",["131"],"import React, {useEffect, useState} from 'react';\nimport CharacterUpdateForm from \"./characterForm/CharacterUpdateForm\";\nimport {Button, Card, CardImg, Col, Row} from 'reactstrap';\nimport axios from \"axios\";\nimport {useHistory} from \"react-router-dom\";\n\nconst CharacterItem = (prop) => {\n    const [edit, setEdit] = useState(false)\n    const history = useHistory()\n\n\n    const deleteCharacter = () => {\n        axios.delete('https://localhost:5001/Character/' + prop.character.characterId).then(res => {\n            prop.getCharacters()\n        }).catch(e => {\n            console.log(\"could not delete character\")\n        })\n    }\n\n    const adminTools = () => {\n        return (\n            <Row className=\"float-right\">\n                <Col md={12}>\n                    <Button onClick={() => deleteCharacter()} className=\"ml-1 mr-1\" id=\"userUpdateBtn\" color=\"primary\">Delete\n                        character</Button>\n                    <Button onClick={() => setEdit(!edit)} className=\"ml-1 mr-1\" id=\"userUpdateBtn\" color=\"primary\">Update\n                        character</Button>\n                </Col>\n            </Row>\n        )\n    }\n\n    const openGame = () => {\n        history.push(\"/character/\" + prop.character.characterId)\n    }\n\n    if (edit && prop.character) {\n        return <CharacterUpdateForm character={prop.character} getCharacters={prop.getCharacters} toggle={setEdit}/>\n    }\n\n    return (\n        <Card body>\n            <Row className=\"m-2\">\n                <Col md={12}>\n                    {prop.character.name} {prop.loggedIn.loggedIn && prop.loggedIn.role === \"ADMIN\" ? adminTools() : null}\n                </Col>\n            </Row>\n            <Row className=\"m-2\">\n                <Col md={6}>\n                    {prop.character.images.length > 0 ? (\n                            <CardImg top src={\"https://localhost:5001/\" + prop.character.images[0]}/>) :\n                        <h1 className=\"text-muted\">No image</h1>}\n                </Col>\n                <Col md={6}>\n                    <Row className=\"mt-2 mb-2\">\n                        <Col md={12}>\n                            <p className=\"text-muted m-0\">Description: {prop.character.description}</p>\n                        </Col>\n                    </Row>\n                </Col>\n            </Row>\n            <Row className=\"m-2\">\n                <Col md={12}>\n                    <Button onClick={() => openGame()} className=\"float-right m-1\" id=\"openGameBtn\"\n                            color=\"secondary\">Open</Button>\n                </Col>\n            </Row>\n        </Card>\n    )\n}\n\nexport default CharacterItem;","/home/blacktype/Documents/westerdals/web/exam-frontend/src/components/character/CharacterList.js",["132","133","134"],"import React, {useEffect, useState} from 'react';\nimport CharacterItem from \"./CharacterItem\";\nimport {CardColumns} from 'reactstrap';\nimport axios from \"axios\";\n\nconst CharacterList = (props) => {\n\n    return (\n        <CardColumns>\n            {props.characters ? props.characters.map((c, i) => <CharacterItem key={i + \"basdas\"} getCharacters={props.getCharacters}\n                                                                  loggedIn={props.loggedIn} character={c}/>) : <p>No Characters</p>}\n        </CardColumns>\n    )\n}\n\nexport default CharacterList;","/home/blacktype/Documents/westerdals/web/exam-frontend/src/components/character/characterForm/CharacterCreateForm.js",["135"],"import React, {useContext, useState} from 'react';\nimport axios from 'axios'\nimport {Button, Card, CardBody, CardTitle, Input, InputGroup} from 'reactstrap';\n\nconst CharacterCreateForm = (prop) => {\n    const [name, setName] = useState(\"\")\n    const [description, setDescription] = useState(\"\")\n\n    const addCharacter = () => {\n        axios.post('https://localhost:5001/Character', {\n            name, description, gameIds: [prop.gameId]\n        }).then(res => {\n            setName(\"\")\n            setDescription(\"\")\n            prop.toggle(false)\n        }).catch(e => {\n            console.log(\"could not add game\")\n        })\n    }\n\n\n    return (\n        <Card className=\"mt-2 mb-2 ml-3 mr-3\">\n            <CardBody>\n                <CardTitle>Create a new game</CardTitle>\n                <InputGroup>\n                    <Input type=\"text\"\n                           id=\"nameInput\"\n                           onChange={(e) => setName(e.target.value)}\n                           value={name}\n                           placeholder=\"name\"/>\n                </InputGroup>\n\n                <InputGroup>\n                    <Input type=\"text\"\n                           id=\"descriptionInput\"\n                           onChange={(e) => setDescription(e.target.value)}\n                           value={description}\n                           placeholder=\"description\"/>\n                </InputGroup>\n\n\n                <Button onClick={addCharacter} id=\"userUpdateBtn\" color=\"primary\">Create</Button>\n            </CardBody>\n        </Card>\n    )\n}\n\nexport default CharacterCreateForm;","/home/blacktype/Documents/westerdals/web/exam-frontend/src/components/character/characterForm/CharacterImageUpload.js",["136","137"],"import React, {useContext, useState} from 'react';\nimport {Button, CustomInput, FormGroup, Label} from 'reactstrap';\nimport axios from \"axios\";\nimport {GameContext} from \"../../../contexts/GameContext\";\n\nconst CharacterImageUpload = (prop) => {\n    const [imageFile, setImageFile] = useState(null);\n\n    const uploadImage = () => {\n        if (imageFile !== null) {\n            const data = new FormData();\n            data.append(\"file\", imageFile)\n            data.append(\"characterId\", prop.characterId)\n            axios.post('https://localhost:5001/Character/UploadImage', data, {headers: {\"Content-Type\": \"multipart/form-data\"}}).then(res => {\n                prop.getCharacters()\n                prop.toggle(false)\n            }).catch(e => {\n                console.log(\"could not add image\")\n            })\n        }\n    }\n\n    return (\n        <FormGroup>\n            <Label for=\"exampleCustomFileBrowser\">Add image</Label>\n            <CustomInput onChange={(e) => setImageFile(e.target.files[0])} type=\"file\" id=\"exampleCustomFileBrowser\"\n                         name=\"customFile\" label=\"Select an image\"/>\n            <Button onClick={uploadImage} id=\"userUpdateBtn\" color=\"primary\">Create</Button>\n        </FormGroup>\n    )\n}\n\nexport default CharacterImageUpload;","/home/blacktype/Documents/westerdals/web/exam-frontend/src/components/character/characterForm/CharacterUpdateForm.js",["138","139"],"import React, {useContext, useState} from 'react';\nimport {GameContext} from \"../../../contexts/GameContext\";\nimport axios from 'axios'\nimport {Button, Card, CardBody, CardTitle, Input, InputGroup} from 'reactstrap';\n\nconst CharacterUpdateForm = (prop) => {\n    const [name, setName] = useState(prop.character.name)\n    const [description, setDescription] = useState(prop.character.description)\n\n    const updateCharacter = () => {\n        axios.put('https://localhost:5001/Character/' + prop.character.characterId, {\n            characterId: prop.character.characterId,\n            name: name,\n            description: description,\n            images: prop.character.images,\n            gameIds: prop.character.gameIds\n        }).then(res => {\n            prop.getCharacters()\n            prop.toggle(false)\n        }).catch(e => {\n            console.log(\"could not update game\")\n        })\n    }\n\n\n    return (\n        <Card className=\"mt-2 mb-2 ml-3 mr-3\">\n            <CardBody>\n                <CardTitle>Update</CardTitle>\n                <InputGroup>\n                    <Input type=\"text\"\n                           id=\"nameInput\"\n                           onChange={(e) => setName(e.target.value)}\n                           value={name}\n                           placeholder=\"name\"/>\n                </InputGroup>\n\n                <InputGroup>\n                    <Input type=\"text\"\n                           id=\"descriptionInput\"\n                           onChange={(e) => setDescription(e.target.value)}\n                           value={description}\n                           placeholder=\"description\"/>\n                </InputGroup>\n\n                <Button onClick={() => prop.toggle(false)} id=\"userUpdateBtn\" color=\"primary\">Back</Button>\n                <Button onClick={updateCharacter} id=\"userUpdateBtn\" color=\"primary\">Update</Button>\n            </CardBody>\n        </Card>\n    )\n}\n\nexport default CharacterUpdateForm;","/home/blacktype/Documents/westerdals/web/exam-frontend/src/pages/CharactersPage.js",["140","141"],{"ruleId":"142","replacedBy":"143"},{"ruleId":"144","replacedBy":"145"},{"ruleId":"146","severity":1,"message":"147","line":8,"column":19,"nodeType":"148","messageId":"149","endLine":8,"endColumn":27},{"ruleId":"146","severity":1,"message":"150","line":2,"column":9,"nodeType":"148","messageId":"149","endLine":2,"endColumn":14},{"ruleId":"146","severity":1,"message":"151","line":2,"column":16,"nodeType":"148","messageId":"149","endLine":2,"endColumn":20},{"ruleId":"152","severity":1,"message":"153","line":10,"column":21,"nodeType":"154","endLine":10,"endColumn":44},{"ruleId":"146","severity":1,"message":"155","line":12,"column":12,"nodeType":"148","messageId":"149","endLine":12,"endColumn":17},{"ruleId":"146","severity":1,"message":"147","line":12,"column":19,"nodeType":"148","messageId":"149","endLine":12,"endColumn":27},{"ruleId":"146","severity":1,"message":"156","line":12,"column":29,"nodeType":"148","messageId":"149","endLine":12,"endColumn":37},{"ruleId":"157","severity":1,"message":"158","line":23,"column":8,"nodeType":"159","endLine":23,"endColumn":10,"suggestions":"160"},{"ruleId":"146","severity":1,"message":"161","line":1,"column":16,"nodeType":"148","messageId":"149","endLine":1,"endColumn":26},{"ruleId":"146","severity":1,"message":"162","line":1,"column":28,"nodeType":"148","messageId":"149","endLine":1,"endColumn":36},{"ruleId":"146","severity":1,"message":"163","line":3,"column":9,"nodeType":"148","messageId":"149","endLine":3,"endColumn":15},{"ruleId":"146","severity":1,"message":"164","line":3,"column":35,"nodeType":"148","messageId":"149","endLine":3,"endColumn":40},{"ruleId":"146","severity":1,"message":"165","line":4,"column":8,"nodeType":"148","messageId":"149","endLine":4,"endColumn":21},{"ruleId":"146","severity":1,"message":"161","line":1,"column":16,"nodeType":"148","messageId":"149","endLine":1,"endColumn":26},{"ruleId":"146","severity":1,"message":"166","line":5,"column":9,"nodeType":"148","messageId":"149","endLine":5,"endColumn":20},{"ruleId":"146","severity":1,"message":"155","line":7,"column":13,"nodeType":"148","messageId":"149","endLine":7,"endColumn":18},{"ruleId":"146","severity":1,"message":"147","line":7,"column":20,"nodeType":"148","messageId":"149","endLine":7,"endColumn":28},{"ruleId":"146","severity":1,"message":"155","line":13,"column":13,"nodeType":"148","messageId":"149","endLine":13,"endColumn":18},{"ruleId":"146","severity":1,"message":"147","line":13,"column":20,"nodeType":"148","messageId":"149","endLine":13,"endColumn":28},{"ruleId":"146","severity":1,"message":"155","line":13,"column":13,"nodeType":"148","messageId":"149","endLine":13,"endColumn":18},{"ruleId":"146","severity":1,"message":"147","line":13,"column":20,"nodeType":"148","messageId":"149","endLine":13,"endColumn":28},{"ruleId":"146","severity":1,"message":"161","line":1,"column":16,"nodeType":"148","messageId":"149","endLine":1,"endColumn":26},{"ruleId":"146","severity":1,"message":"166","line":3,"column":9,"nodeType":"148","messageId":"149","endLine":3,"endColumn":20},{"ruleId":"146","severity":1,"message":"167","line":6,"column":8,"nodeType":"148","messageId":"149","endLine":6,"endColumn":27},{"ruleId":"157","severity":1,"message":"168","line":21,"column":8,"nodeType":"159","endLine":21,"endColumn":10,"suggestions":"169"},{"ruleId":"146","severity":1,"message":"170","line":1,"column":16,"nodeType":"148","messageId":"149","endLine":1,"endColumn":25},{"ruleId":"146","severity":1,"message":"170","line":1,"column":16,"nodeType":"148","messageId":"149","endLine":1,"endColumn":25},{"ruleId":"146","severity":1,"message":"162","line":1,"column":27,"nodeType":"148","messageId":"149","endLine":1,"endColumn":35},{"ruleId":"146","severity":1,"message":"171","line":4,"column":8,"nodeType":"148","messageId":"149","endLine":4,"endColumn":13},{"ruleId":"146","severity":1,"message":"161","line":1,"column":16,"nodeType":"148","messageId":"149","endLine":1,"endColumn":26},{"ruleId":"146","severity":1,"message":"161","line":1,"column":16,"nodeType":"148","messageId":"149","endLine":1,"endColumn":26},{"ruleId":"146","severity":1,"message":"166","line":4,"column":9,"nodeType":"148","messageId":"149","endLine":4,"endColumn":20},{"ruleId":"146","severity":1,"message":"161","line":1,"column":16,"nodeType":"148","messageId":"149","endLine":1,"endColumn":26},{"ruleId":"146","severity":1,"message":"166","line":2,"column":9,"nodeType":"148","messageId":"149","endLine":2,"endColumn":20},{"ruleId":"146","severity":1,"message":"172","line":3,"column":8,"nodeType":"148","messageId":"149","endLine":3,"endColumn":22},{"ruleId":"146","severity":1,"message":"166","line":5,"column":9,"nodeType":"148","messageId":"149","endLine":5,"endColumn":20},"no-native-reassign",["173"],"no-negated-in-lhs",["174"],"no-unused-vars","'setGames' is assigned a value but never used.","Identifier","unusedVar","'Badge' is defined but never used.","'Card' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'games' is assigned a value but never used.","'getGames' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'getGame' and 'id'. Either include them or remove the dependency array.","ArrayExpression",["175"],"'useContext' is defined but never used.","'useState' is defined but never used.","'Button' is defined but never used.","'Input' is defined but never used.","'CharacterItem' is defined but never used.","'GameContext' is defined but never used.","'CharacterCreateForm' is defined but never used.","React Hook useEffect has missing dependencies: 'getCharacter' and 'id'. Either include them or remove the dependency array.",["176"],"'useEffect' is defined but never used.","'axios' is defined but never used.","'GameCreateForm' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"177","fix":"178"},{"desc":"179","fix":"180"},"Update the dependencies array to be: [getGame, id]",{"range":"181","text":"182"},"Update the dependencies array to be: [getCharacter, id]",{"range":"183","text":"184"},[1002,1004],"[getGame, id]",[891,893],"[getCharacter, id]"]